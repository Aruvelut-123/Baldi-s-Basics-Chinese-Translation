#!/bin/sh
set -e

# 加载 debconf 函数库（兼容非交互环境）
if [ -f /usr/share/debconf/confmodule ]; then
    . /usr/share/debconf/confmodule
fi

# 初始化 debconf 系统（仅交互模式）
init_debconf() {
    db_version 2.0
    db_capb backup
    db_settitle bbp-chinese/install-path
}

# 安全获取安装路径
get_install_path() {
    # 非交互模式处理
    if [ ! -t 0 ] || [ "$DEBIAN_FRONTEND" = "noninteractive" ]; then
        # 从环境变量或默认路径获取
        INSTALL_PATH="${INSTALL_PATH:-/default/path}"
        return 0
    fi

    # 交互模式使用 debconf
    init_debconf
    db_input medium bbp-chinese/install-path || true
    db_go
    db_get bbp-chinese/install-path
    INSTALL_PATH="$RET"
}

# 路径标准化处理
sanitize_path() {
    echo "$1" | sed \
        -e 's/\\ / /g' \     # 处理转义空格
        -e 's/[“”]/"/g' \    # 替换中文引号
        -e 's/／/\//g' \     # 替换全角斜杠
        -e 's/^ *//;s/ *$//' # 去除首尾空格
}

# 增强文件验证
validate_files() {
    local path="$1"
    local found=0

    # 检查可执行文件
    for exe in BALDI.x86_64 BALDI.x86; do
        if [ -f "${path}/${exe}" ] && [ -x "${path}/${exe}" ]; then
            found=1
            break
        fi
    done

    # 错误处理
    if [ $found -eq 0 ]; then
        if [ -t 0 ]; then
            echo "错误：未找到可执行文件" > /dev/tty
            echo "路径内容：" > /dev/tty
            ls -l "$path" > /dev/tty
        fi
        exit 1
    fi
}

# 主执行流程
main() {
    get_install_path
    CLEAN_PATH=$(sanitize_path "$INSTALL_PATH")
    validate_files "$CLEAN_PATH"

    # 安全存储配置
    mkdir -p /tmp/bbp-chinese
    printf "ACTUAL_INSTALL_PATH=%q\n" "$CLEAN_PATH" > /tmp/bbp-chinese/config
    chmod 600 /tmp/bbp-chinese/config
}

main