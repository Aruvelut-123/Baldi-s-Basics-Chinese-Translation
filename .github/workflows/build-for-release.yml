name: 构建正式版

on:
  push:
    branches:
      - main

jobs:
  create:
    name: 创建发行版
    runs-on: ubuntu-24.04
    container: debian:sid
    outputs:
      upload_url: ${{ steps.save_url.outputs.UPLOAD_URL }}
    steps:
    - name: 获取最新版
      uses: actions/checkout@v4
    - name: 安装 git
      run: |
        apt-get -y update
        apt-get -y install git
    - name: 获取汉化文件
      run: |
        git clone https://gitee.com/baldi-series-localization/baldi-chinese-translation-sheet.git BB-ChineseFile
        cp -f -R -v BB-ChineseFile/* ./
    - name: 设置版本、日志
      id: sets
      run: |
        ver=$(cat ver.txt)
        tag=$(cat ver.txt | tr [:upper:] [:lower:] | tr ' ' '_')
        sed -i 's/{PASSWORD}/无/g' updates.txt
        log=$(cat updates.txt)
        echo "ver=$ver" >> "$GITHUB_OUTPUT"
        echo "log=$log" >> "$GITHUB_OUTPUT"
        echo "tag=$tag" >> "$GITHUB_OUTPUT"
    - name: 创建发行版
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.sets.outputs.tag }}
        release_name: ${{ steps.sets.outputs.ver }}
        body: ${{ steps.sets.outputs.log }}
        draft: false
        prerelease: false
    - name: 保存上传链接
      id: save_url
      run: echo "UPLOAD_URL=${{steps.create_release.outputs.upload_url}}" >> $GITHUB_OUTPUT
  build:
    needs: create
    strategy:
      matrix:
        arch: [86, 64]
    name: 构建Windows版并上传
    runs-on: ubuntu-24.04
    container: debian:sid
    steps:
    - name: 获取最新版
      uses: actions/checkout@v4
    - name: 安装 7-zip 和 git
      run: |
        apt-get -y update
        apt-get -y install p7zip-full git
    - name: 获取汉化文件
      run: |
        git clone https://gitee.com/baldi-series-localization/baldi-chinese-translation-sheet.git BB-ChineseFile
        cp -f -R -v BB-ChineseFile/* ./
    - name: 打包汉化文件
      run: |
        ver=$(cat ver.txt)
        sed -i 's/Dev_Build/'"$ver"'/g' AutoTranslator/BepInEx/Translation/zh/Text/_AutoGeneratedTranslations.txt
        printf "\n" >> AutoTranslator/BepInEx/Translation/zh/Text/_AutoGeneratedTranslations.txt
        cat BBTimes/BepInEx/Translation/zh/Text/_AutoGeneratedTranslations.txt >> AutoTranslator/BepInEx/Translation/zh/Text/_AutoGeneratedTranslations.txt
        rm -f BBTimes/BepInEx/Translation/zh/Text/_AutoGeneratedTranslations.txt
        7z a BBP.7z BBP/.
        7z a AutoTranslator.7z AutoTranslator/.
        7z a BepInEx.7z BepInEx${{matrix.arch}}/.
        7z a BBDevAPI.7z BBDevAPI/.
        7z a BBTimes.7z BBTimes/.
    - name: 安装 NSIS
      run: |
        bash -c 'echo "deb http://ftp.debian.org/debian unstable main contrib non-free" >> /etc/apt/sources.list.d/unstable.list'
        apt-get -y update
        apt-get -y install -t unstable nsis
        ver=$(cat ver.txt)
        sed -i 's/ver_replace_001/'"$ver"'/g' installer_release${{matrix.arch}}.nsi
        sed -i 's/ver_replace_001/'"$ver"'/g' readme.txt
    - name: 构建安装程序
      run: makensis installer_release${{matrix.arch}}.nsi
    - name: 设置版本、日志
      id: sets
      run: |
        ver=$(cat ver.txt)
        gamever=$(cat bbpver.txt)
        echo "ver=$ver" >> "$GITHUB_OUTPUT"
        echo "gamever=$gamever" >> "$GITHUB_OUTPUT"
        mv installer.exe "BB+ $gamever v$ver x${{matrix.arch}}.exe"
        echo "file_name=BB+ $gamever v$ver x${{matrix.arch}}.exe" >> "$GITHUB_OUTPUT"
    - name: 上传文件
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        upload_url: ${{ needs.create.outputs.upload_url }}
      with:
        upload_url: ${{ env.upload_url }}
        asset_path: ./${{ steps.sets.outputs.file_name }}
        asset_name: ${{ steps.sets.outputs.file_name }}
        asset_content_type: application/zip
  build_for_linux:
    needs: create
    strategy:
      matrix:
        arch: [86, 64]
    name: 构建Linux版并上传
    runs-on: ubuntu-24.04
    container: debian:sid
    steps:
    - name: 获取最新版
      uses: actions/checkout@v4
    - name: 安装 7-zip 和 git
      run: |
        apt-get -y update
        apt-get -y install p7zip-full git
    - name: 获取汉化文件
      run: |
        git clone https://gitee.com/baldi-series-localization/baldi-chinese-translation-sheet.git BB-ChineseFile
        cp -f -R -v BB-ChineseFile/* ./
    - name: 打包汉化文件
      run: |
        sed -i 's/ /-/g' ver.txt
        ver=$(cat ver.txt)
        sed -i 's/Dev_Build/'"$ver"'/g' AutoTranslator/BepInEx/Translation/zh/Text/_AutoGeneratedTranslations.txt
        printf "\n" >> AutoTranslator/BepInEx/Translation/zh/Text/_AutoGeneratedTranslations.txt
        cat BBTimes/BepInEx/Translation/zh/Text/_AutoGeneratedTranslations.txt >> AutoTranslator/BepInEx/Translation/zh/Text/_AutoGeneratedTranslations.txt
        rm -f BBTimes/BepInEx/Translation/zh/Text/_AutoGeneratedTranslations.txt
        7z a BBP.7z BBP/.
        7z a AutoTranslator.7z AutoTranslator/.
        7z a BepInEx.7z BepInExLinux${{matrix.arch}}/.
        7z a BBDevAPI.7z BBDevAPI/.
        7z a BBTimes.7z BBTimes/.
    - name: 提前准备
      run: |
        cp -f -R -v BBP.7z bbp-chinese/opt/bbp-chinese/BBP.7z
        cp -f -R -v AutoTranslator.7z bbp-chinese/opt/bbp-chinese/AutoTranslator.7z
        cp -f -R -v BepInEx.7z bbp-chinese/opt/bbp-chinese/BepInEx.7z
        cp -f -R -v BBDevAPI.7z bbp-chinese/opt/bbp-chinese/BBDevAPI.7z
        cp -f -R -v BBTimes.7z bbp-chinese/opt/bbp-chinese/BBTimes.7z
    - name: 构建安装程序
      run: |
        rm bbp-chinese/DEBIAN/preinst
        mv bbp-chinese/DEBIAN/preinst2 bbp-chinese/DEBIAN/preinst
        chmod 775 bbp-chinese/DEBIAN/preinst
        ver=$(cat ver.txt)
        sed -i 's/ver_replace_001/'"$ver"'/g' bbp-chinese/DEBIAN/control
        sed -i 's/{ARCH}/'${{matrix.arch}}'/g' bbp-chinese/DEBIAN/control
        dpkg-deb --build bbp-chinese bbp-chinese.deb
    - name: 设置版本、日志并重命名安装程序
      id: sets
      run: |
        ver=$(cat ver.txt)
        gamever=$(cat bbpver.txt)
        echo "ver=$ver" >> "$GITHUB_OUTPUT"
        echo "gamever=$gamever" >> "$GITHUB_OUTPUT"
        mv bbp-chinese.deb "BB+ $gamever v$ver x${{matrix.arch}}.deb"
        echo "file_name=BB+ $gamever v$ver x${{matrix.arch}}.deb" >> "$GITHUB_OUTPUT"
        ls
    - name: 上传文件
      id: upload_asset
      uses: actions/upload-release-asset@v1
      env:
        UPLOAD_URL: ${{ needs.create.outputs.upload_url }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.UPLOAD_URL }}
        asset_path: ./${{ steps.sets.outputs.file_name }}
        asset_name: ${{ steps.sets.outputs.file_name }}
        asset_content_type: application/zip