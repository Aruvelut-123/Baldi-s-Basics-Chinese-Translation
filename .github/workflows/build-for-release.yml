name: 构建正式版

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        arch: [86, 64]
    name: 构建
    runs-on: ubuntu-latest
    container: debian:sid
    steps:
    - name: 获取最新版
      uses: actions/checkout@v4
    - name: 安装7-zip和git
      run: |
        apt-get -y update
        apt-get -y install p7zip-full git
    - name: 获取汉化文件
      run: |
        git clone https://github.com/Aruvelut-123/BB-ChineseFile
        cp -f -R -v BB-ChineseFile/* ./
    - name: 打包汉化文件
      run: |
        7z a BBP.7z BBP\.
        7z a AutoTranslator.7z AutoTranslator\.
        7z a BepInEx.7z BepInEx${{matrix.arch}}\.
        7z a BBDevAPI.7z BBDevAPI\.
    - name: 安装 NSIS
      run: |
        bash -c 'echo "deb http://ftp.debian.org/debian unstable main contrib non-free" >> /etc/apt/sources.list.d/unstable.list'
        apt-get -y update
        apt-get -y install -t unstable nsis
        ver=$(cat ver.txt)
        sed -i 's/ver_replace_001/'"$ver"'/g' installer_release${{matrix.arch}}.nsi
    - name: 构建安装程序
      run: makensis installer_release${{matrix.arch}}.nsi
    - name: 设置版本、日志并重命名安装程序
      id: sets
      run: |
        ver=$(cat ver.txt)
        gamever=$(cat bbpver.txt)
        sed -i 's/{PASSWORD}/无/g' updates.txt
        log=$(cat updates.txt)
        tag=$(cat ver.txt | tr [:upper:] [:lower:] | tr ' ' '_')
        echo "ver=$ver" >> "$GITHUB_OUTPUT"
        echo "gamever=$gamever" >> "$GITHUB_OUTPUT"
        echo "log=$log" >> "$GITHUB_OUTPUT"
        echo "tag=$tag" >> "$GITHUB_OUTPUT"
        mv installer.exe "BB+_$gamever_v$ver_x${{matrix.arch}}.exe"
        echo "file_name=BB+_$gamever_v$ver_x${{matrix.arch}}.exe" >> "$GITHUB_OUTPUT"
    - name: 创建发行版
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.sets.outputs.tag }}
        release_name: ${{ steps.sets.outputs.ver }}
        body: ${{ steps.sets.outputs.log }}
        draft: false
        prerelease: false
    - name: 上传文件
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.sets.outputs.file_name }}
        asset_name: ${{ steps.sets.outputs.file_name }}
        asset_content_type: application/zip